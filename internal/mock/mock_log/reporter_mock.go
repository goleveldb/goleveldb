// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/goleveldb/goleveldb/log (interfaces: Reporter)

// Package mock_log is a generated GoMock package.
package mock_log

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockReporter is a mock of Reporter interface.
type MockReporter struct {
	ctrl     *gomock.Controller
	recorder *MockReporterMockRecorder
}

// MockReporterMockRecorder is the mock recorder for MockReporter.
type MockReporterMockRecorder struct {
	mock *MockReporter
}

// NewMockReporter creates a new mock instance.
func NewMockReporter(ctrl *gomock.Controller) *MockReporter {
	mock := &MockReporter{ctrl: ctrl}
	mock.recorder = &MockReporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReporter) EXPECT() *MockReporterMockRecorder {
	return m.recorder
}

// Corruption mocks base method.
func (m *MockReporter) Corruption(arg0 error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Corruption", arg0)
}

// Corruption indicates an expected call of Corruption.
func (mr *MockReporterMockRecorder) Corruption(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Corruption", reflect.TypeOf((*MockReporter)(nil).Corruption), arg0)
}
